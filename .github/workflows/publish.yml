# Github actions to build
# and push wheel files
name: Build Quarto Wheels

on:
  push:
    workflow_dispatch:
jobs:
  build_wheels:
    name: Wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - uses: robinraju/release-downloader@v1.8
        if: contains(matrix.os, 'macos')
        with:
          repository: "quarto-dev/quarto-cli"
          latest: true
          fileName: "quarto-*-macos.tar.gz"

      - if: contains(matrix.os, 'macos')
        run: |
          mv quarto-*-macos.tar.gz quarto
          pushd quarto
          tar -xvf quarto-*-macos.tar.gz
          rm quarto-*-macos.tar.gz
          popd 

      - uses: robinraju/release-downloader@v1.8
        if: contains(matrix.os, 'windows')
        with:
          repository: "quarto-dev/quarto-cli"
          latest: true
          fileName: "quarto-*-win.zip"

      - if: contains(matrix.os, 'windows')
        run: |
          mv quarto-*-win.zip quarto
          pushd quarto
          unzip -xvf quarto-*-win.zip
          rm quarto-*-win.zip
          popd
          
      - uses: robinraju/release-downloader@v1.8
        if: contains(matrix.os, 'ubuntu')
        with:
          repository: "quarto-dev/quarto-cli"
          latest: true
          fileName: "quarto-*-linux-arm64.tar.gz"

      - if: contains(matrix.os, 'ubuntu')
        run: |
          mv quarto-*-linux-arm64.tar.gz quarto
          pushd quarto

          tar -xvf quarto-*-linux-arm64.tar.gz
          rm quarto-*-linux-arm64.tar.gz
          mv -v quarto-*/share .
          mv -v quarto-*/bin .
          rm -rfv quarto-*/
          popd

      - name: Initialize Modules
        run: |
          pushd quarto
          cd bin
          touch __init.py__
          cd ..
          cd share
          touch __init.py__
          cd ..
          popd
  
      
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build MacOS wheels
        if: contains(matrix.os, 'macos')
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: cp3*-macosx_universal2
          CIBW_PLATFORM: macos
          CIBW_ARCHS: universal2
          CIBW_REPAIR_WHEEL_COMMAND: ""

      - name: Build Windows wheels
        if: contains(matrix.os, 'windows')
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: cp3*-win_x86
          CIBW_PLATFORM: windows
          CIBW_ARCHS: x86
          CIBW_REPAIR_WHEEL_COMMAND: ""
      
      - name: Build Linux wheels
        if: contains(matrix.os, 'ubuntu')
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: cp3*-manylinux_aarch64
          CIBW_PLATFORM: linux
          CIBW_ARCHS: aarch64
          CIBW_REPAIR_WHEEL_COMMAND: ""          

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: wheelhouse/*.whl
